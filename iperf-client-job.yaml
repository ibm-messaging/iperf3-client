apiVersion: batch/v1 
kind: Job
metadata:
  labels:
    run: iperf3-client
  name: iperf3-client
#  namespace: iperf
spec:
# Set to match number of available server instances, default is 1
# Relying on the svc to round robin the clients to the servers doesnt seem to work, so have to generate
# different job files with the different endpoints of the servers you wish to connect to
  parallelism: 1
  template:
    metadata:
      labels:
        run: iperf3-client
#      annotations:
#        k8s.v1.cni.cncf.io/networks: mqns/tengig
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                deployment: iperf3-server
                job-name: iperf3-client
              topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: IPERF3_HOSTNAME
          value: iperf3-server
 #         value: 172.30.218.144
#        image: uk.icr.io/mqperf/iperf3-client
        image: docker.io/stmassey/iperf3-client
#        imagePullPolicy: IfNotPresent
        imagePullPolicy: Always
        name: iperf3-client
        resources: 
          requests:
            memory: "1Gi"
            cpu: "2"
          limits:
            memory: "1Gi"
            cpu: "2"
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      securityContext: {}
      terminationGracePeriodSeconds: 30
#      nodeSelector: 
#        kubernetes.io/hostname : worker5.<hostname>
        
